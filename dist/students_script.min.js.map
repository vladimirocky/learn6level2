{"version":3,"sources":["students_script.js"],"names":["baseMass","usersMass","User","name","surname","lastname","login","age","height","this","printMass","anyArray","targTable","oldTable","getElementById","removeChild","tableRes","document","createElement","rawIndex","rawValue","index","innerText","key_elem","valueTd","appendChild","printUserMass","i","length","loginUser","id","popMass","result","pop","pop_shift_Value","innerHTML","massOnBoard","alert","shiftMass","shift","pushMass","pushVal","push_unshift_Value","value","push","unshiftMass","shiftVal","unshift","lengthMass","lengthValue","concatMass","new_mass","concatValue","split","searchMass","searchValue","valueToSearch","resIndex","indexOf","opt","text","newUser","String","selectUser","addUser","userHeight","firstName","secName","lastName","sum","userResult","midleAge","midleHeight","_i","_usersMass","countUsers","concat","_i2","_usersMass2","selectedUser","myFunc","map","e","options","remove","selectedIndex","splice","addEventListener","massOfUser"],"mappings":"aACA,IAAAA,SAAA,CAAA,OAAA,OAAA,OAAA,QAKAC,UAAA,GAKA,SAASC,KAAKC,EAAMC,EAAQC,EAASC,EAAMC,EAAIC,GAW3CC,KAAKN,KAAOA,EAAZM,KAAKN,QAALC,EACAK,KAAKL,SAAUA,EACfK,KAAKJ,MAALC,EACAG,KAAKH,IAAQA,EACbG,KAAKF,OAALC,EAWJ,SAASE,UAAWC,EAAUC,GAA9B,IAAAC,EAAoBF,SAApBG,eAAyC,kBAEjCD,GAGAD,EAAUG,YAAYF,GAI1B,IAAIG,EAAWC,SAASC,cAAc,SAAlCF,EAAWC,SAASC,cAAc,MAElCC,EAAWF,SAASC,cAAc,MAElCE,EAAQH,SAAWC,cAAR,MAEfG,EAAIA,UAAgB,QAEpBA,IAAMC,EAANL,SAAAC,cACA,MASA,IAAK,IAAIK,KARTC,EAAIA,UAAkB,QAEtBA,EAAQF,YAAYD,GAGpBD,EAASK,YAAYD,GAGAb,EAAS,CAG1B,IAAAU,EAAAJ,SAAAC,cAAA,MACIG,EAAKC,UAAYJ,EACrBG,IAAMC,EAANL,SAAAC,cACA,MAEAM,EAAQF,UAAYX,EAASY,GAE7BJ,EAASM,YAAYJ,GAFrBG,EAAQF,YAAYX,GAMxBK,EAAAS,YAAAN,GAEAH,EAASS,YAAYL,GADrBJ,EAASS,GAAAA,iBAKTb,EAAUa,YAAYT,GAuC1B,SAASU,cAAcf,EAASC,GAC5B,IAAIC,EAAWI,SAASH,eAAe,uBAD3CD,GACQA,EAAWI,YAASH,GAEpBF,IAAAA,EAAUG,SAAAA,cAAV,SAKJI,EAAWF,SAASC,cAAc,MAFtCE,EAAYH,SAAGA,cAASC,MAExBG,EAAIF,SAAWF,cAASC,MAExBG,EAAID,UAAWH,QAEf,IAAAO,EAAYP,SAASC,cAAc,MAEnCG,EAAMC,UAAY,QAElBH,EAAIK,YAAUP,GAKdG,EAASK,YAAYD,GAEjB,IAAK,IAAIG,EAAI,EAAGA,EAAI1B,UAAU2B,OAAQD,IAAI,CAH9CR,IAASM,EAAAA,SAATP,cAAA,MACAE,EAASK,UAAYD,EAEZ,IAAKA,EAAUvB,SAASiB,cAAa,MAClCG,EAAKC,UAAYJ,EAAAA,GAATW,UACZR,EAAMC,YAAND,GAMAD,EAASK,YAAYD,GADrBL,EAASM,YAAYJ,GACrBD,EAASK,YAAYD,GAOzBR,EAASc,GAAK,sBAHdd,EAASS,YAAYN,GAMxB,SAIDY,UAEI,GAAA/B,SAAA4B,OAAA,CAEA,IAAAI,EAAAhC,SAAAiC,MAEIC,gBAAAC,UAAA,KAAAH,EAKAtB,UAAUV,SAAUoC,kBAEpBC,MAAM,+CACT,SAAAC,YAID,GAAAtC,SAAA4B,OAAA,CAQI,IAAII,EAAShC,SAASuC,QAEtBL,gBAAgBC,UAAY,KAAOH,EAF/BA,UAAShC,SAASuC,kBAGtB7B,MAAUV,oBAIjB,SAAAwC,WAED,IAAAC,EAAAC,mBAAqBC,MAEjB,GAAIF,EAAUC,CAOG1C,SAAS4C,KAAKH,GAC3B/B,UAAUV,SAAUoC,kBAApB1B,MAAUV,qBAIjB,SAAA6C,cAED,IAAAC,EAASD,mBAAeF,MAIpB,GAAIG,EAQa9C,SAAS+C,QAAQD,QAE9BT,MAAM,qBAId,SAASW,aAQLC,IAAAA,EAAYd,SAAYP,OAC3BqB,YAAAd,UAAA,MAAAH,EAGG,SAAAkB,aAGA,IAAAC,EAAAC,YAAAT,MAAAU,MAAA,KAaIrD,YAAWA,MADfU,UAEIA,SAAUV,SAASoC,OAAVe,GACNf,aAENC,MAAA,SAID,SAAAiB,aAeI,IAAItB,EAAiBuB,YAASC,MAC9BC,GAAAA,EAAA,CAFJ,IAIKzB,EAAAhC,SAAA0D,QAAAF,GAAInB,SAAMF,UAAA,MAAAH,OAElBK,MAAA,8BAQGsB,SAAIhB,aAEJgB,IAAIC,EAAOC,UAAQvD,OAGpBqD,EAAA1C,SAAAC,cAAA,UAEDyC,EAAAhB,MAAAmB,OAAmBhC,GALjB6B,EAAIC,KAAOC,QAAQvD,MASjByD,WAAIF,YAAUF,GAUd,SAAMK,UAMNL,GAJmBzC,MAAAA,OAAcX,IAAjCoC,OAAAsB,WAAAtB,MAImBrC,CAEnByD,IAAAA,EAAWtC,IAAAA,KACZyC,UAAAvB,MAjBGwB,QAAQxB,MAkBZuB,SAAAvB,MACAwB,MAAQxB,MACRyB,IAASzB,MACHA,WAANA,OAEAsB,UAAWtB,KAAQkB,GAfjB,IAAI/B,EAAK7B,UAAU2B,OAmBd+B,EAAP1C,SAAAC,cAAA,UACAyC,EAAAhB,MAAAmB,OAAAhC,GACEuC,EAAGT,KAAUpD,EAAbF,MAbAyD,WAAWtC,YAAYkC,GAiBzBW,UAAWnC,MAAX,GACDgC,QAAAxB,MAAA,GAdCyB,SAASzB,MAAQ,GAgBnBrC,MAASiE,MAAT,GACEhE,IAAI8D,MAAJ,GAdAJ,WAAWtB,MAAQ,GAgBjB0B,SAAOG,cAXT,IAYC,IAAAH,EAAA,EAZDI,EAAA,EAAAC,EAAiBzE,UAAjBwE,EAAAC,EAAA9C,OAAA6C,IAA4B,CAaxBzC,IAbS0C,EAAAD,GAaGjE,OAGjB,IAAAwB,EAAAqC,EAAApE,UAAA2B,OAED0C,WAASK,UAAT,gBAAAC,OAAsB5C,GAVtB,SAASuC,WAeT,IAdE,IAAIF,EAAM,EAcZQ,EAAA,EAAAC,EAAkB7E,UAAlB4E,EAAAC,EAAAlD,OAAAiD,IAAkB,CACVE,IADRD,EAAAD,GACoBtE,IAElB,IAAIwE,EAAAA,EAAc9E,UAAA2B,OACY0C,WAAShE,UAAT,mBAAAsE,OAAA5C,GAE5B/B,SAAAA,aAEAqE,WAAWnC,UAAXmC,GAAAA,OAAArE,UAAA2B,OAAA0C,kBAIH,SAAAU,SAGH,IAAAD,EAAAhB,WAAApB,MAZI,GAAIoC,EAAc,CAChB,IAAM1D,EAAQpB,UAAUgF,IAAI,SAACC,GAAD,OAAOA,EAAE5E,QAAOoD,QAAQqB,GACpDhB,WAAWoB,QAAQC,OAAOrB,WAAWsB,eACrCpF,UAAUqF,OAAOjE,EAAO,GAExBiD,WAAWnC,UAAX,gBAAAyC,OAAuCG,EAAvC,0BAEAT,WAAWnC,UAAX,uCAwBNlB,SAASsE,iBAAiB,mBAAoB,WAAc7E,UAAUV,SAAUoC,eAKhFnB,SAASsE,iBAAiB,mBAAoB,WAC1C7D,cAAczB,UAAWuF","file":"students_script.min.js","sourcesContent":["/// init\r\n/* Читайте комментарии и допишите код где необходимо */\r\n\r\n// Тут объяелен массив и его можно и нужно будет менять\r\nlet baseMass = ['Вася','Петя','Коля','Женя'];\r\n// Это массив пользователей, работайте с ним\r\n// для выполнения последнего задания\r\nlet usersMass = [];\r\n\r\n// Напишите функцию-конструктор\r\n// которая позволит создавать объекты User\r\nfunction User(name, surname,lastname,login,age,height) {\r\n    /**\r\n     * Ваш код тут\r\n     *\r\n    this.name = name;\r\n    this...\r\n    ...\r\n     this.login = login;\r\n     ...\r\n    *\r\n     */\r\n    this.name = name;\r\n    this.surname = surname;\r\n    this.lastname = lastname;\r\n    this.login = login;\r\n    this.age = age;\r\n    this.height = height;\r\n}\r\n\r\n// Функция реализует вывод массива на экран\r\n// Если вы изменили массив - вызовите эту функцию чтобы отобразить актальные значения\r\n/**\r\n *\r\n * @param anyArray - массив с данными которые будем отображать\r\n * @param targTable - элемент HTML в котором мы разместим нашу таблицу\r\n */\r\nfunction printMass (anyArray, targTable) {\r\n    // это позволит \"почистить\" наш html от старой таблицы\r\n    let oldTable = document.getElementById('tableRemovable');\r\n    // если таблица не пустая - почистим ее\r\n    if (oldTable) {\r\n        targTable.removeChild(oldTable);\r\n    }\r\n\r\n    // Создать элемент таблица\r\n    let tableRes = document.createElement('table')\r\n    // Строка индекса\r\n    let rawIndex = document.createElement('tr')\r\n    // Строка значений\r\n    let rawValue = document.createElement('tr');\r\n    // Ячейка заголовок\r\n    let index = document.createElement('th');\r\n    // Присвоим значение ячейки заголовка\r\n    index.innerText = 'Index';\r\n    // Ячейка значений\r\n    let valueTd = document.createElement('td');\r\n    // Присвоение значения ячейке значений\r\n    valueTd.innerText = 'Value';\r\n    // Добавить к строкам новые ячейки\r\n    rawIndex.appendChild(index);\r\n    rawValue.appendChild(valueTd);\r\n\r\n    // Цикл, который пройдется по массиву и отрисует его значения\r\n    for (let key_elem in anyArray){\r\n        // умышленно используем in\r\n        // чтобы использовать реальные индексы элементов массива\r\n        // Ячейка заголовок\r\n        let index = document.createElement('th');\r\n        index.innerText = key_elem;\r\n        // Ячейка значений\r\n        let valueTd = document.createElement('td');\r\n        valueTd.innerText = anyArray[key_elem];\r\n        // Добавить к строкам новые ячейки\r\n        rawIndex.appendChild(index);\r\n        rawValue.appendChild(valueTd);\r\n    }\r\n\r\n    // Записываем в теблицу строки со значениями\r\n    tableRes.appendChild(rawIndex);\r\n    tableRes.appendChild(rawValue);\r\n    // Добавим id таблицы\r\n    tableRes.id = 'tableRemovable';\r\n    // Запишем таблицу на свое место\r\n    targTable.appendChild(tableRes);\r\n}\r\n\r\n/**\r\n * Ваш код тут!\r\n *\r\n * Реализуйте функцию printUserMass\r\n * По аналогии с printUser\r\n * Только теперь функция будет работать с массивом объектов User\r\n * Нужно немного поменять цикл\r\n * Он также пройдется по всем элементам массива\r\n * Используйте for of или классический for\r\n * Однако в таблицу надо записывать не сам объект, а его свойство\r\n * свойтво -- логин пользователя\r\n *\r\n * В целом, в функции почти ничего не поменяется\r\n * за исключением пары строк приведенных ниже\r\n *\r\n * ...\r\n * так как нам точно нужен другой идетнификатор для второй таблице в документе\r\n * let oldTable = document.getElementById('tableRemovableUsers');\r\n * if (oldTable) {\r\n *     targTable.removeChild(oldTable);\r\n * }\r\n * ...\r\n * for (let i = 0; i < usersMass.length; i++){\r\n *     ...\r\n *     let valueTd = document.createElement('td');\r\n *     valueTd.innerText = anyArray[i].login;\r\n *     ..\r\n * }\r\n * ...\r\n * так как нам точно нужен другой идетнификатор для второй таблице в документе\r\n * tableRes.id = 'tableRemovableUsers';\r\n * ...\r\n *\r\n*/\r\n\r\n\r\nfunction printUserMass(anyArray,targTable){\r\n    let oldTable = document.getElementById('tableRemovableUsers');\r\n    if (oldTable) {\r\n        targTable.removeChild(oldTable);\r\n    }\r\n// Создать элемент таблица\r\nlet tableRes = document.createElement('table')\r\n// Строка индекса\r\nlet rawIndex = document.createElement('tr')\r\n// Строка значений\r\nlet rawValue = document.createElement('tr');\r\n// Ячейка заголовок\r\nlet index = document.createElement('th');\r\n// Присвоим значение ячейки заголовка\r\nindex.innerText = 'Index';\r\n// Ячейка значений\r\nlet valueTd = document.createElement('td');\r\n// Присвоение значения ячейке значений\r\nvalueTd.innerText = 'Value';\r\n// Добавить к строкам новые ячейки\r\nrawIndex.appendChild(index);\r\nrawValue.appendChild(valueTd);\r\n\r\n    for (let i = 0; i < usersMass.length; i++){\r\n        let index = document.createElement('th');\r\n        index.innerText = i;\r\n\r\n        let valueTd = document.createElement('td');\r\n        valueTd.innerText = anyArray[i].loginUser;\r\n\r\n        rawIndex.appendChild(index);\r\n        rawValue.appendChild(valueTd);\r\n    }\r\n\r\n    // Записываем в теблицу строки со значениями\r\n    tableRes.appendChild(rawIndex);\r\n    tableRes.appendChild(rawValue);\r\n    // Добавим id таблицы\r\n    tableRes.id = 'tableRemovableUsers';\r\n    // Запишем таблицу на свое место\r\n    targTable.appendChild(tableRes);\r\n}\r\n\r\n\r\n\r\n// эта функция реализована для примера и уже работает\r\nfunction popMass () {\r\n    // чтобы проверить, что массив не пустой\r\n    // мы получаем его длину\r\n    // если длина 0 - выражение будет приведено к false\r\n    if (baseMass.length) {\r\n        // используем метод массива\r\n        let result = baseMass.pop();\r\n        // записываем результат в html документ\r\n        pop_shift_Value.innerHTML = '- ' + result;\r\n        // вызов функции вывода массива\r\n        printMass(baseMass, massOnBoard);\r\n    } else {\r\n        alert(\"Массив уже пуст!\\nСначала добавьте значения\");\r\n    }\r\n}\r\n\r\nfunction shiftMass(){\r\n    // чтобы проверить, что массив не пустой\r\n    // мы получаем его длину\r\n    // если длина 0 - выражение будет приведено к false\r\n    if (baseMass.length) {\r\n        /**\r\n         * Ваш код тут\r\n         * let result =\r\n         */\r\n        let result = baseMass.shift();\r\n\r\n        pop_shift_Value.innerHTML = '- ' + result;\r\n        printMass(baseMass, massOnBoard);\r\n    } else {\r\n        alert(\"Массив уже пуст!\");\r\n    }\r\n}\r\n\r\nfunction pushMass () {\r\n\r\n    let pushVal = push_unshift_Value.value;\r\n    if (pushVal) {\r\n        /**\r\n         * Ваш код тут\r\n         * примените push к baseMass\r\n         * \r\n         */\r\n        let result = baseMass.push(pushVal);\r\n        printMass(baseMass, massOnBoard); // это выведет обновленный массив\r\n    } else {\r\n        alert(\"Введите значение!\");\r\n    }\r\n}\r\n\r\nfunction unshiftMass () {\r\n\r\n    let shiftVal = push_unshift_Value.value;\r\n\r\n    if (shiftVal) {\r\n        /**\r\n         * Ваш код тут\r\n         * примените unshift к baseMass\r\n         * Вызовите printMass чтобы отобразить\r\n         * новый массив\r\n         */\r\n\r\n        let result = baseMass.unshift(shiftVal)\r\n    } else {\r\n        alert(\"Введите значение!\");\r\n    }\r\n}\r\n\r\nfunction lengthMass(){\r\n    /**\r\n     * Ваш код тут\r\n     * let result =\r\n     * запишите в result длину массива\r\n     */\r\n\r\n    const result = baseMass.length\r\n    lengthValue.innerHTML = \" - \" + result;\r\n}\r\n\r\nfunction concatMass (){\r\n    // В new_mass будет записан массив,\r\n    // сформированный из значений поля ввода, записанных через запятую\r\n    let new_mass = concatValue.value.split(',');\r\n    /**\r\n     * Ваш код тут\r\n     * Напишите условие, чтобы проверить\r\n     * что поле ввода не пустое\r\n     * Если поле вводе не пустое - примените concat\r\n     * метод массивов, позволяющий объединять один массив с другим\r\n     * вот так --\r\n     * основной_массив = основной_массив.concat(другой_массив)\r\n     *\r\n     * Если поле ввода пустое используйте окно alert\r\n     */\r\n\r\n    if (concatValue.value){\r\n        baseMass = baseMass.concat(new_mass);\r\n        printMass(baseMass,massOnBoard);\r\n    } else {\r\n        alert('Пусто')\r\n    }\r\n}\r\n\r\nfunction searchMass (){\r\n    /**\r\n     * Ваш код тут\r\n     * Получите значение из элемента html с id -- searchValue\r\n     * Если значение непустое примените метод indexOf\r\n     * Этот метод позволит получить индекс элемента массива по значению\r\n     * массив.indexOf(значение)\r\n     * Если такого значения нет -- вернется -1\r\n     *\r\n     * Результат успешного поиска запишите в элементе html с id -- resIndex\r\n     * Если значение не найдено или поле пустое используйте окно alert\r\n     */\r\n\r\n\r\n     let valueToSearch = searchValue.value;\r\n    if (valueToSearch) {\r\n        let result = baseMass.indexOf(valueToSearch);\r\n        resIndex.innerHTML = \" - \" + result;\r\n    }\r\n    else {   alert('Введите значние для поиска')\r\n}\r\n}\r\n\r\n\r\nfunction setOptions() {\r\n    let id = usersMass.length;\r\n  \r\n    let opt = document.createElement(\"option\");\r\n  \r\n    opt.value = String(id);\r\n  \r\n    opt.text = newUser.login;\r\n  \r\n    selectUser.appendChild(opt);\r\n  }\r\n  \r\n  function addUser() {\r\n    const requiredNotEmpty = login.value && age.value && userHeight.value;\r\n  \r\n    if (requiredNotEmpty) {\r\n      let newUser = new User(\r\n        firstName.value,\r\n        secName.value,\r\n        lastName.value,\r\n        login.value,\r\n        age.value,\r\n        userHeight.value\r\n      );\r\n      usersMass.push(newUser);\r\n  \r\n      let id = usersMass.length;\r\n  \r\n      let opt = document.createElement(\"option\");\r\n  \r\n      opt.value = String(id);\r\n  \r\n      opt.text = newUser.login;\r\n  \r\n      selectUser.appendChild(opt);\r\n    }\r\n    firstName.value = \"\";\r\n    secName.value = \"\";\r\n    lastName.value = \"\";\r\n    login.value = \"\";\r\n    age.value = \"\";\r\n    userHeight.value = \"\";\r\n  }\r\n  \r\n  function midleHeight() {\r\n    let sum = 0;\r\n    for (let user of usersMass) {\r\n      sum += +user.height;\r\n    }\r\n    let result = sum / usersMass.length;\r\n  \r\n    userResult.innerHTML = `средний рост ${result}`;\r\n  }\r\n  \r\n  function midleAge() {\r\n    let sum = 0;\r\n    for (let user of usersMass) {\r\n      sum += +user.age;\r\n    }\r\n    let result = sum / usersMass.length;\r\n  \r\n    userResult.innerHTML = `средний возраст ${result}`;\r\n  }\r\n  \r\n  function countUsers() {\r\n    userResult.innerHTML = `${usersMass.length} пользователей`;\r\n  }\r\n  \r\n  //Удаляет выбранного пользователя\r\n  function myFunc() {\r\n    const selectedUser = selectUser.value;\r\n  \r\n    if (selectedUser) {\r\n      const index = usersMass.map((e) => e.login).indexOf(selectedUser);\r\n      selectUser.options.remove(selectUser.selectedIndex);\r\n      usersMass.splice(index, 1);\r\n  \r\n      userResult.innerHTML = `Пользователь ${selectedUser} больше не с нами`;\r\n    } else {\r\n      userResult.innerHTML = `Базу пользователей опустошили до нас`;\r\n    }\r\n  }\r\n  \r\n\r\n/**\r\n * Ваш код тут\r\n *\r\n * Внимательно посмотрите на реализацию в файле script.js\r\n * Посмотрите на код в этом вайле выше\r\n *\r\n * Используйте написанную вами функцию printUserMass() для массива usersMass\r\n * В этот массив и записывайте объекты User\r\n *\r\n * селектор -- элемент html \"выпадающий список\"\r\n *\r\n * По аналогии реализуйте следующие функции\r\n * addUser() -- добавит нового пользователя, обновит массив и селектор\r\n * midleHeight() -- выведет средний рост пользователей\r\n * midleAge() -- выведет средний возраст\r\n * countUsers() -- выведет длину массива пользователей\r\n * myFunc() - функция которая работает с селектором, придумайте что сделать самостоятельно\r\n */\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () { printMass(baseMass, massOnBoard);});\r\n\r\n  //В//нимание!\r\n // Раскомментировать, когда реализуете printUserMass()\r\n// document.addEventListener(\"DOMContentLoaded\", function () { printUserMass(usersMass, massOfUser);});\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    printUserMass(usersMass, massOfUser);\r\n  });"]}